# import Post from "./generated/prisma.graphql"

type Query {
  feed: [Post!]!
  drafts: [Post!]!
  post(id: ID!): Post
  me: User
  logs: [Log!]!
  logsByUserId(id: ID!): [Log!]!
  meals: [Meal!]!
}

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  createDraft(title: String!, text: String!): Post!
  publish(id: ID!): Post!
  deletePost(id: ID!): Post!
  createLog(userId: ID!): Log!
  # findLogByDate(userId: ID!, date: DateTime!)
  #cant do below since no push or pop scalar list functions atm. in prisma beta 3 as of 4/12
  #addMealToLog(id: ID!, mealId: ID!): Meal!
  #now using custom join table instead. insert into n:n table
  addMealEntryToLog(id: ID!, mealId: ID!, mealType: MEALTYPE): MealLogEntry!
  removeMealEntryFromLog(id: ID!): MealLogEntry!
}

type Subscription {
  feedSubscription: PostSubscriptionPayload!
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
  name: String!
  posts: [Post!]!
}

# enum MEALTYPE {
#   BREAKFAST
#   LUNCH
#   DINNER
#   SNACK
# }